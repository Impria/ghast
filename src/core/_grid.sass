// Name:            Grid
// Description:     Styles for the grid system
//
// Namespace:       `grid`
//
// Modifiers:       `component-modifier`
//
// States:          `component-state`
//
// ========================================================================


// Variables
// ========================================================================

$grid-size-10: 10%
$grid-size-20: 20%
$grid-size-25: 25%
$grid-size-33: 33.3333%
$grid-size-40: 40%
$grid-size-50: 50%
$grid-size-60: 60%
$grid-size-66: 66.6666%
$grid-size-75: 75%
$grid-size-80: 80%
$grid-size-90: 90%

$grid-sizes: ( 10: ($grid-size-10), 20: ($grid-size-20), 25: ($grid-size-25), 33: ($grid-size-33), 40: ($grid-size-40), 50: ($grid-size-50), 60: ($grid-size-60), 66: ($grid-size-66), 75: ($grid-size-75), 80: ($grid-size-80), 90: ($grid-size-90))

// Component: Grid
// ========================================================================

.container
  +media(desktop)
    &.fluid
      max-width: none
      margin: 0 2rem
  +media(mobile)
    padding: 0 2rem
  margin: 0 auto
  max-width: $core-width
  padding: 0
  position: relative
  width: 100%

// Using flexbox for the grid, inspired by Milligram:
// https://milligram.github.io/
// By default each .col within a .row will evenly take up
// available width, and the height of each .col with take
// up the height of the tallest .col in the same .row.

.row
  display: flex
  flex-direction: column
  padding: 0
  width: 100%

  &.row-wrap
    flex-wrap: wrap

  & + .row
    margin-top: 2rem

  // Vertically Align Columns
  // .row-* vertically aligns every .col in the .row
  &.row-top
    align-items: flex-start

  &.row-bottom
    align-items: flex-end

  &.row-center
    align-items: center

  &.row-stretch
    align-items: stretch

  &.row-baseline
    align-items: baseline

  .col
    display: block
    flex: 1
    margin-left: 0
    max-width: 100%
    width: 100%

    & + .col
      margin-bottom: 2rem

    // .col-* vertically aligns an individual .col
    &.col-top
      align-self: flex-start

    &.col-bottom
      align-self: flex-end

    &.col-center
      align-self: center

    // Explicit Column Percent Sizes
    // By default each grid column will evenly distribute
    // across the grid. However, you can specify individual
    // columns to take up a certain size of the available area
    // Column offsets are defined with the .col-o-X class

    @each $name, $size in $grid-sizes
      &.col-#{$name}
        flex: 0 0 $size
        max-width: $size

      &.col-offset-#{$name}
        margin-left: $size

    // Responsive Column Sizes

    &.col-sm
      +media(mobile)
        flex: 1
        max-width: 100%
        width: 100%

// Larger than mobile screen

+media(tablet)
  .row
    flex-direction: row
    margin-left: -1rem
    width: calc(100% + 2rem)

    .col
      margin-bottom: inherit
      padding: 0 1rem
